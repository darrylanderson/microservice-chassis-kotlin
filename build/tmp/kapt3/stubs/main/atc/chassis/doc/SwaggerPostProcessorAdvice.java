package atc.chassis.doc;

import java.lang.System;

/**
 * This advice object is necessary to hook into the autogenerated swagger.json and do certain post-processing
 * steps. This is required because springfox doesn't always enable enough hooks.
 *
 * * Make method names not look dumb (they currently have "_1" at the end of them). Basically, it will scan the
 * swagger document structure and replace all the operationId node values
 * that have "_?" in them with a sanitized form.
 *
 * * Order the tags. For some unknown reason, springfox/swagger doesn't like ordering. So this is the only
 * way to avoid the HashSet they use for all their data structures.
 */
@kotlin.Metadata(mv = {1, 1, 15}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000P\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0003\b\u0017\u0018\u0000 \u001c2\b\u0012\u0004\u0012\u00020\u00020\u0001:\u0001\u001cB\u0005\u00a2\u0006\u0002\u0010\u0003J\u0018\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0006\u001a\u00020\u00072\u0006\u0010\b\u001a\u00020\tH\u0012J\u0010\u0010\n\u001a\u00020\u00052\u0006\u0010\u0006\u001a\u00020\u0007H\u0012JH\u0010\u000b\u001a\u0004\u0018\u00010\u00022\b\u0010\f\u001a\u0004\u0018\u00010\u00022\u0006\u0010\r\u001a\u00020\u000e2\u0006\u0010\u000f\u001a\u00020\u00102\u0012\u0010\u0011\u001a\u000e\u0012\n\b\u0001\u0012\u0006\u0012\u0002\b\u00030\u00130\u00122\u0006\u0010\u0014\u001a\u00020\u00152\u0006\u0010\u0016\u001a\u00020\u0017H\u0016J\u0018\u0010\u0018\u001a\u00020\u00052\u0006\u0010\u0006\u001a\u00020\u00072\u0006\u0010\b\u001a\u00020\tH\u0012J$\u0010\u0019\u001a\u00020\u001a2\u0006\u0010\r\u001a\u00020\u000e2\u0012\u0010\u001b\u001a\u000e\u0012\n\b\u0001\u0012\u0006\u0012\u0002\b\u00030\u00130\u0012H\u0016\u00a8\u0006\u001d"}, d2 = {"Latc/chassis/doc/SwaggerPostProcessorAdvice;", "Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyAdvice;", "", "()V", "addLogoUrl", "", "parent", "Lcom/fasterxml/jackson/databind/JsonNode;", "fieldName", "", "addTagGroups", "beforeBodyWrite", "body", "returnType", "Lorg/springframework/core/MethodParameter;", "selectedContentType", "Lorg/springframework/http/MediaType;", "selectedConverterType", "Ljava/lang/Class;", "Lorg/springframework/http/converter/HttpMessageConverter;", "request", "Lorg/springframework/http/server/ServerHttpRequest;", "response", "Lorg/springframework/http/server/ServerHttpResponse;", "sanitize", "supports", "", "converterType", "Companion", "microservice-chassis-kotlin"})
@org.springframework.web.bind.annotation.ControllerAdvice(assignableTypes = {springfox.documentation.swagger2.web.Swagger2Controller.class})
public class SwaggerPostProcessorAdvice implements org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice<java.lang.Object> {
    private static final org.slf4j.Logger log = null;
    public static final atc.chassis.doc.SwaggerPostProcessorAdvice.Companion Companion = null;
    
    @java.lang.Override()
    public boolean supports(@org.jetbrains.annotations.NotNull()
    org.springframework.core.MethodParameter returnType, @org.jetbrains.annotations.NotNull()
    java.lang.Class<? extends org.springframework.http.converter.HttpMessageConverter<?>> converterType) {
        return false;
    }
    
    @org.jetbrains.annotations.Nullable()
    @java.lang.Override()
    public java.lang.Object beforeBodyWrite(@org.jetbrains.annotations.Nullable()
    java.lang.Object body, @org.jetbrains.annotations.NotNull()
    org.springframework.core.MethodParameter returnType, @org.jetbrains.annotations.NotNull()
    org.springframework.http.MediaType selectedContentType, @org.jetbrains.annotations.NotNull()
    java.lang.Class<? extends org.springframework.http.converter.HttpMessageConverter<?>> selectedConverterType, @org.jetbrains.annotations.NotNull()
    org.springframework.http.server.ServerHttpRequest request, @org.jetbrains.annotations.NotNull()
    org.springframework.http.server.ServerHttpResponse response) {
        return null;
    }
    
    /**
     * Add Redoc supported vendor extension properties such as x-logo.
     *
     * @param parent    parent node
     * @param fieldName name of field to append to
     * @throws JsonProcessingException json processing exception
     */
    private void addLogoUrl(com.fasterxml.jackson.databind.JsonNode parent, java.lang.String fieldName) {
    }
    
    private void addTagGroups(com.fasterxml.jackson.databind.JsonNode parent) throws com.fasterxml.jackson.core.JsonProcessingException {
    }
    
    private void sanitize(com.fasterxml.jackson.databind.JsonNode parent, java.lang.String fieldName) {
    }
    
    public SwaggerPostProcessorAdvice() {
        super();
    }
    
    @kotlin.Metadata(mv = {1, 1, 15}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0006"}, d2 = {"Latc/chassis/doc/SwaggerPostProcessorAdvice$Companion;", "", "()V", "log", "Lorg/slf4j/Logger;", "kotlin.jvm.PlatformType", "microservice-chassis-kotlin"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
}